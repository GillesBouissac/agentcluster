#!/bin/sh

### BEGIN INIT INFO
# Provides:          agentcluster
# Required-Start:    $remote_fs $network $syslog
# Required-Stop:     $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: SNMP Agent cluster daemon
# Description:       Agent cluster allow simulation of multiple SNMP Agents on the same host
### END INIT INFO

#
# Author: Gilles Bouissac
#

# Do NOT "set -e" as this script is based on returns values <>0

DESC="SNMP Agent cluster daemon"
NAME=agentcluster
DAEMON_UID=root
DAEMON_GID=root
DAEMON=/usr/local/bin/agentclusterd.py
DAEMON_ARGS="--cache-dir /var/local/agentcluster/ --monitoring 30"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

# This script is a conf file and could be present while the binaries
#   has been removed. We must check this first
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if any
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Imports LSB functions.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
    # Return
    # 0 if daemon has been started
    # 1 if daemon was already running
    # 2 if daemon could not be started
    start-stop-daemon --start --quiet --pidfile $PIDFILE --make-pidfile --chuid $DAEMON_UID:$DAEMON_GID --startas $DAEMON --test > /dev/null || return 1
    start-stop-daemon --start --quiet --pidfile $PIDFILE --make-pidfile --chuid $DAEMON_UID:$DAEMON_GID --startas $DAEMON --background -- $DAEMON_ARGS || return 2
}

#
# Function that stops the daemon/service
# 0 if daemon has been stopped
# 1 if daemon was already stopped
# 2 if daemon could not be stopped
# other if a failure occurred
#
do_stop()
{
    # Kill the main process
    start-stop-daemon --stop --quiet --retry=INT/30/KILL/5 --pidfile $PIDFILE
    RETVAL="$?"
    [ "$RETVAL" = 2 ] && return 2

    # Wait for child agents to finish, they are named with the same path
    # start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 --exec $DAEMON
    # [ "$?" = 2 ] && return 2

    # Removes pidfile
    rm -f $PIDFILE
    return "$RETVAL"
}

case "$1" in

    start)
        log_daemon_msg "Starting $DESC" "$NAME"
        do_start
        case "$?" in
            0|1) log_end_msg 0 ;;
            2)   log_end_msg 1 ;;
        esac
        ;;

    stop)
        log_daemon_msg "Stopping $DESC" "$NAME"
        do_stop
        case "$?" in
            0|1) log_end_msg 0 ;;
            2)   log_end_msg 1 ;;
        esac
        ;;

    status)
        log_daemon_msg "Checking status of $DESC"
        start-stop-daemon --status --pidfile $PIDFILE
        case "$?" in
            0) log_end_msg 0 ;;
            *)
                # Removes pidfile
                rm -f $PIDFILE
                log_end_msg 1
                ;;
        esac
        ;;

    restart|force-reload)
        log_daemon_msg "Restarting $DESC" "$NAME"
        do_stop
        case "$?" in
            0|1)
                do_start
                case "$?" in
                    0) log_end_msg 0 ;;
                    1) log_end_msg 1 ;; # Old process is still running
                    *) log_end_msg 1 ;; # Failed to start
                esac
                ;;
    
            *)
                # Failed to stop
                log_end_msg 1
                ;;
        esac
        ;;

    *)
        echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
        exit 3
        ;;
esac

